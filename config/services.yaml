# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Model/'
            - '../src/Exception/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Service\Security\AccessTokenService:
        arguments:
            $host: '@=service("request_stack").getCurrentRequest().getHost()'

    App\Serializer\RelationHandler:
        arguments:
            - '@doctrine.orm.entity_manager'
        tags:
            - { name: jms_serializer.handler, type: Relation, direction: serialization, format: json, method: serializeRelation}
            - { name: jms_serializer.handler, type: Relation, direction: deserialization, format: json, method: deserializeRelation}
            - { name: jms_serializer.handler, type: Relation<?>, direction: serialization, format: json, method: serializeRelation}
            - { name: jms_serializer.handler, type: Relation<?>, direction: deserialization, format: json, method: deserializeRelation}

#    App\Serializer\EnumHandler:
#        tags:
#            - { name: jms_serializer.handler, type: Enum, direction: serialization, format: json, method: serializeEnum}
#            - { name: jms_serializer.handler, type: Enum, direction: deserialization, format: json, method: deserializeEnum}
#            - { name: jms_serializer.handler, type: Enum<?>, direction: serialization, format: json, method: serializeEnum}
#            - { name: jms_serializer.handler, type: Enum<?>, direction: deserialization, format: json, method: deserializeEnum}
